// Generated by LiveScript 1.5.0
var R, shortList, load, toInt;
R = require('ramda');
shortList = require('../functions/short-list');
load = require('../modules/tasks');
toInt = require('../functions/to-int');
module.exports = function(args, options, log, path){
  var ids, end, refresh, tasks, s, endedTasks, this$ = this;
  ids = args.ids;
  end = options.end, refresh = options.refresh;
  tasks = load(path);
  s = {
    deleted: false
  };
  switch (false) {
  case !end:
    endedTasks = tasks.tasks.filter(function(it){
      return it.status === 'done';
    });
    if (!R.isEmpty(endedTasks)) {
      s.deleted = true;
      endedTasks.forEach(function(task){
        tasks.remove(task.id);
        return log.info("[Remove] " + task.id + ": " + task.name);
      });
    }
    break;
  case !!R.isEmpty(ids):
    ids.map(toInt).forEach(function(id){
      var task;
      task = tasks.find(id);
      switch (false) {
      case !!task:
        return log.info("[Error] not found task (id = " + id + ")");
      default:
        s.deleted = true;
        tasks.remove(task.id);
        return log.info("[Remove] " + task.id + ": " + task.name);
      }
    });
  }
  if (refresh && s.deleted) {
    log.info("----- ----- -----");
    log.info("Remaining tasks.");
    tasks.refresh();
    shortList(log, tasks.tasks);
  }
  if (s.deleted) {
    return tasks.save();
  }
};